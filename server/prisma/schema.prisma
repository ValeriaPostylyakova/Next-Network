generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())

  email          String  @unique
  password       String
  isActivated    Boolean @default(false)
  activationLink String?
  token          Token?
  fullname       String
  identifier     String? @unique
  jobTitle       String?

  role    UserRole @default(USER)
  posts   Post[]
  stories Story[]
  chats   Chat[]
  friends Friend[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Token {
  id Int @id @default(autoincrement())

  isActivated  Boolean @default(false)
  refreshToken String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
}

model Post {
  id       Int    @id @default(autoincrement())
  imageUrl String
  likes    Int
  comments Json?
  user     User   @relation(fields: [userId], references: [id])
  userId   Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model StoryItem {
  id Int @id @default(autoincrement())

  imageUrl String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Story     Story?   @relation(fields: [storyId], references: [id])
  storyId   Int?
}

model Story {
  id Int @id @default(autoincrement())

  imageUrl String
  items    StoryItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User   User? @relation(fields: [userId], references: [id])
  userId Int?
}

model Chat {
  id Int @id @default(autoincrement())

  user     User?     @relation(fields: [userId], references: [id])
  userId   Int?
  messages Message[]
  friend   Friend[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  friendId  Int
}

model Message {
  id Int @id @default(autoincrement())

  text   String
  sender String

  chat   Chat? @relation(fields: [chatId], references: [id])
  chatId Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Friend {
  id Int @id @default(autoincrement())

  user   User? @relation(fields: [userId], references: [id])
  userId Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  chat      Chat[]
}

enum UserRole {
  USER
  ADMIN
}
